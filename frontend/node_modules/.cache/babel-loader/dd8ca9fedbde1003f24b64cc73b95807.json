{"ast":null,"code":"var _jsxFileName = \"/home/jac/Documents/MySite/portfolio/frontend/src/containers/App.js\";\nimport React, { Component } from \"react\"; // import Particles from \"react-tsparticles\";\n\nimport Register from '../Components/Register/Register';\nimport Signin from '../Components/Signin/Signin';\nimport Navigation from \"../Components/Navigation/Navigation\";\nimport Logo from \"../Components/Logo/Logo\";\nimport ImageLinkForm from \"../Components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"../Components/FaceRecognition/FaceRecognition\";\nimport Rank from \"../Components/Rank/Rank\";\nimport Banner from \"../Components/Banner\";\nimport Footer from \"../Components/Footer\";\nimport '../style/App.css'; // const particlesOptions = {\n//   particles: {\n//     number: {\n//       value: 30,\n//       density: {\n//         enable: true,\n//         value_area: 800\n//       }\n//     }\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}; // const particlesInit = (main) => {\n//   console.log(main);\n//   // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n// };\n// const particlesLoaded = (container) => {\n//   console.log(container);\n// };\n\nclass App extends Component {\n  constructor() {\n    super(); // this.state = {\n    //   input: '',\n    //   imageUrl: '',\n    //   box: {},\n    //   route: 'signin',\n    //   isSignedIn: false,\n    //   user: {\n    //     id: '',\n    //     name: '',\n    //     email: '',\n    //     entries: 0,\n    //     joined: ''\n    //   }\n    // }\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      }); // console.log(event.target.value);\n    };\n\n    this.state = initialState;\n  } // componentDidMount() {\n  //   fetch('http://localhost:3000/').then(response => response.json()).then(console.log)\n  // }\n\n\n  //   onButtonSubmit = () => {\n  //     this.setState({imageUrl: this.state.input});\n  //     fetch('http://localhost:3000/imageurl', {\n  //       method: 'post',\n  //       headers: {'Content-Type': 'application/json'},\n  //       body: JSON.stringify({\n  //         input: this.state.input\n  //       })\n  //     }).then(response => response.json())\n  //     .then(response => {\n  //       console.log('hi', response)\n  //       if (response) {\n  //         fetch('http://localhost:3000/image', {\n  //           method: 'put',\n  //           headers: {'Content-Type': 'application/json'},\n  //           body: JSON.stringify({\n  //             id: this.state.user.id\n  //           })\n  //         })\n  //           .then(response => response.json())\n  //           .then(count => {\n  //             this.setState(Object.assign(this.state.user, { entries: count}))\n  //           })\n  //       }\n  //       this.displayFaceBox(this.calculateFaceLocation(response))\n  //     })\n  //     .catch(err => console.log(err));\n  // }\n  // onRouteChange = (route) => {\n  //   if (route === 'signout') {\n  //     this.setState({initialState})\n  //   } else if (route === 'home') {\n  //     this.setState({isSignedIn: true})\n  //   }\n  //   this.setState({route: route});\n  // }\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App \",\n      children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/jac/Documents/MySite/portfolio/frontend/src/containers/App.js"],"names":["React","Component","Register","Signin","Navigation","Logo","ImageLinkForm","FaceRecognition","Rank","Banner","Footer","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","state","render","onRouteChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import Particles from \"react-tsparticles\";\n\n\nimport Register from '../Components/Register/Register';\nimport Signin from '../Components/Signin/Signin';\n\nimport Navigation from \"../Components/Navigation/Navigation\";\nimport Logo from \"../Components/Logo/Logo\";\nimport ImageLinkForm from \"../Components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"../Components/FaceRecognition/FaceRecognition\";\nimport Rank from \"../Components/Rank/Rank\";\nimport Banner from \"../Components/Banner\";\nimport Footer from \"../Components/Footer\";\nimport '../style/App.css';\n\n\n\n// const particlesOptions = {\n//   particles: {\n//     number: {\n//       value: 30,\n//       density: {\n//         enable: true,\n//         value_area: 800\n//       }\n//     }\n//   }\n// }\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n}\n\n// const particlesInit = (main) => {\n//   console.log(main);\n\n//   // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n// };\n\n// const particlesLoaded = (container) => {\n//   console.log(container);\n// };\nclass App extends Component {\n  constructor() {\n    super();\n    // this.state = {\n    //   input: '',\n    //   imageUrl: '',\n    //   box: {},\n    //   route: 'signin',\n    //   isSignedIn: false,\n    //   user: {\n    //     id: '',\n    //     name: '',\n    //     email: '',\n    //     entries: 0,\n    //     joined: ''\n    //   }\n    // }\n\n    this.state = initialState;\n\n  }\n\n  // componentDidMount() {\n  //   fetch('http://localhost:3000/').then(response => response.json()).then(console.log)\n  // }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n    // console.log(event.target.value);\n  }\n\n\n\n//   onButtonSubmit = () => {\n//     this.setState({imageUrl: this.state.input});\n//     fetch('http://localhost:3000/imageurl', {\n//       method: 'post',\n//       headers: {'Content-Type': 'application/json'},\n//       body: JSON.stringify({\n//         input: this.state.input\n//       })\n//     }).then(response => response.json())\n\n//     .then(response => {\n//       console.log('hi', response)\n//       if (response) {\n//         fetch('http://localhost:3000/image', {\n//           method: 'put',\n//           headers: {'Content-Type': 'application/json'},\n//           body: JSON.stringify({\n//             id: this.state.user.id\n//           })\n//         })\n//           .then(response => response.json())\n//           .then(count => {\n//             this.setState(Object.assign(this.state.user, { entries: count}))\n//           })\n\n//       }\n//       this.displayFaceBox(this.calculateFaceLocation(response))\n//     })\n//     .catch(err => console.log(err));\n// }\n// onRouteChange = (route) => {\n//   if (route === 'signout') {\n//     this.setState({initialState})\n//   } else if (route === 'home') {\n//     this.setState({isSignedIn: true})\n//   }\n//   this.setState({route: route});\n// }\n\n\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n\n    return (\n      <div className=\"App \">\n       {/* <Particles className='particles'\n          params={particlesOptions}\n        /> */}\n\n        \n\n        {/* <Particles\n      id=\"tsparticles\"\n      init={particlesInit}\n      loaded={particlesLoaded}\n      options={{\n        background: {\n          color: {\n            value: \"#0d47a1\",\n          },\n        },\n        fpsLimit: 60,\n        interactivity: {\n          detectsOn: \"canvas\",\n          events: {\n            onClick: {\n              enable: true,\n              mode: \"push\",\n            },\n            onHover: {\n              enable: true,\n              mode: \"repulse\",\n            },\n            resize: true,\n          },\n          modes: {\n            bubble: {\n              distance: 400,\n              duration: 2,\n              opacity: 0.8,\n              size: 40,\n            },\n            push: {\n              quantity: 4,\n            },\n            repulse: {\n              distance: 200,\n              duration: 0.4,\n            },\n          },\n        },\n        particles: {\n          color: {\n            value: \"#ffffff\",\n          },\n          links: {\n            color: \"#ffffff\",\n            distance: 150,\n            enable: true,\n            opacity: 0.5,\n            width: 1,\n          },\n          collisions: {\n            enable: true,\n          },\n          move: {\n            direction: \"none\",\n            enable: true,\n            outMode: \"bounce\",\n            random: false,\n            speed: 6,\n            straight: false,\n          },\n          number: {\n            density: {\n              enable: true,\n              value_area: 800,\n            },\n            value: 80,\n          },\n          opacity: {\n            value: 0.5,\n          },\n          shape: {\n            type: \"circle\",\n          },\n          size: {\n            random: true,\n            value: 5,\n          },\n        },\n        detectRetina: true,\n      }}\n    /> */}\n\n        <Banner />\n\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n            <div>\n              <Logo />\n              \n             \n              \n            </div>\n      \n        \n        <Footer />\n\n      </div>\n      \n\n    )}\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}